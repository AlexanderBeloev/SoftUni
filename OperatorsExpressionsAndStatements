using System;

class BitsExchange
{
    static void Main()
    {
        uint n = 4294901775			// 11111111 11111111 00000000 00001111            

        uint mask3 = 7 << 3;             	// 00000000 00000000 00000000 00111000 set mask to get 3, 4, 5 bit
        uint result3 = (uint)(n & mask3);       // 00000000 00000000 00000000 00001000 get 3, 4, 5 bit
        uint change3 = result3 << 21;		// 00000001 00000000 00000000 00000000 move 3, 4, 5 bit to place 24, 25, 26

        uint mask24 = 7 << 24; 	        	// 00000111 00000000 00000000 00000000 set mask to get 24, 25, 26 bit
        uint result24 = (uint)(n & mask24);     // 00000111 00000000 00000000 00000000 get 24, 25, 26 bit
        uint change24 = result24 >> 21;  	// 00000000 00000000 00000000 00111000 move 24, 25, 26 bit to place 3, 4, 5

						                
        int nullP = ~(7 << 3);          	// 11111111 11111111 11111111 11000111 set mask to make positions 3, 4, 5 to 0 
        n = (uint)(n & nullP);                  // 11111111 11111111 00000000 00000111 result

						                
        int nullT = ~(7 << 24);          	// 11111000 11111111 11111111 11111111 set mask to make positions 24, 25, 26 to 0
        n = (uint)(n & nullT);  	        // 11111000 11111111 00000000 00000111 result   

        n = n | change3;			// 11111001 11111111 00000000 00000111 merge the number with the bits from position 3, 4, 5
        n = n | change24;			// 11111001 11111111 00000000 00111111 merge the number with the bits from position 24, 25, 26

        Console.WriteLine("After:\t{0}\t{1}", n, Convert.ToString(n, 2).PadLeft(32, '0'));
    }
}
