//exchange bids from position P and positin T of number N
//in our case P = 3 and T = 24

int n = 255406592;        	// 00001111 00111001 00110010 00000000 (n)
int mask3 = 1 << 3;      	// 00000000 00000000 00000000 00001000 (creating mask for position T)
int result3 = n & mask3;  	// 00000000 00000000 00000000 00000000 (merging mask and number n)
result3 >>= 3;                  // 00000000 00000000 00000000 00000000 (result for P)
int mask24 = 1 << 24; 	  	// 00000001 00000000 00000000 00000000 (creating mask for postion T)
int result24 = n & mask24;      // 00000001 00000000 00000000 00000000 (merging mask and number T)
result24 >>= 24;                // 00000000 00000000 00000000 00000001 (result for T)
if (result24 == 1)    	  	// in our case T (result24) is 1, which is true
{
	n |= mask3;	        // 00001111 00111001 00110010 00000000 (n)					 
}				// 00000000 00000000 00000000 00001000 (mask P)
else				// 00001111 00000000 00110010 00001000 (result)
{
	n &= (~mask3);
}
if (result3 == 1) 		// in our case P (result3) is 0, which is false
{
	n |= mask24;
}
else
{
	n &= (~mask24);		// 00001111 00000000 00110010 00001000 (n)
}				// 11111110 11111111 11111111 11111111 (tilda mask T)
				// 00001110 00111001 00110010 00001000 (result)
				// now we have exchanged bit 3 with bit 24. You can do that for bit 4 and bit 25 
				// and once more for bit 5 and bit 26.
